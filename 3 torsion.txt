P<x> := PolynomialRing(Integers());
f := P! x^2+1;
A<i> := NumberField(f);
Q<y> := PolynomialRing(A);
ys := AssociativeArray();
ps := AssociativeArray();
term1 := 1/3*i+1/7;
term2 := 11/5*i+1/13;
p:= Q! 3*y^4+6*term1*y^2+12*term2*y-term1^2;
F:=SplittingField(p);
H:=F;
D:=Degree(H);
print "degree=", D; 
r:=Roots(p,F);
for a1 in [1 .. #r] do
	F1<z> := PolynomialRing(H);
	ys[a1] := r[a1][1]^3+term1*r[a1][1]+term2;
	ps[a1] := F1! z^2 - ys[a1];
	if IsIrreducible(ps[a1]) then 
		H:=ext<H|ps[a1]>;
		D:=D*Degree(H);
		print "degree=", D;
	end if; 
end for;
print "check";
if D eq 96 then
	G := GaloisGroup(H);
	N := NormalSubgroups(G:OrderEqual := 2);	
	try 
		pp:=N[1];
		print "good";
	catch e
		print "bad";						
	end try;		
end if;	
